---
import "../styles/global.css";
import { Toaster } from "../components/ui/sonner";
import { UserNav } from "../components/auth/UserNav";

interface Props {
  title?: string;
  showNav?: boolean;
}

const { title = "GymMate - Tw√≥j osobisty trener w kieszeni", showNav = false } = Astro.props;

// Get user session data from middleware
// Middleware populates Astro.locals.user if the user is authenticated
const { user, profile } = Astro.locals;

// Verify user authentication state
const isAuthenticated = !!user;

// Extract user information for navigation
const userEmail = user?.email || "";
const userName = profile?.full_name || userEmail.split("@")[0] || "";
const userRole = profile?.role || "member";

// For debugging in development (optional - remove in production)
if (import.meta.env.DEV && user) {
  // User authenticated: { id: user.id, email: user.email, role: userRole, hasProfile: !!profile }
}
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="dark">
    {
      showNav && (
        <header class="border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
          <div class="container mx-auto px-4 h-16 flex items-center justify-between">
            <a href="/" class="flex items-center gap-2 font-bold text-xl">
              <span class="text-primary">GymMate</span>
            </a>
            <UserNav
              client:load
              isAuthenticated={isAuthenticated}
              userEmail={userEmail}
              userName={userName}
              userRole={userRole}
            />
          </div>
        </header>
      )
    }
    <slot />
    <Toaster client:load />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
